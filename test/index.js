'use strict';

const should = require('chai').should(); // eslint-disable-line
const Hexo = require('hexo');

describe('hexo-renderer-coffeescript', () => {
  const ctx = {
    config: {}
  };
  const r = require('../lib/renderer').bind(ctx);

  it('default', () => {
    const body = 'alert "hello world"';
    const result = r({text: body});

    result.should.eql([
      '(function() {',
      '  alert("hello world");',
      '',
      '}).call(this);'
    ].join('\n') + '\n');
  });

  it('bare', () => {
    ctx.config.coffee = {
      bare: true
    };

    const body = 'alert "hello world"';
    const result = r({text: body});

    result.should.eql('alert("hello world");\n');
    delete ctx.config.coffee;
  });

  it('header', () => {
    ctx.config.coffee = {
      header: true
    };

    const body = 'alert "hello world"';
    const result = r({text: body});

    result.should.contain('// Generated by CoffeeScript');

    delete ctx.config.coffee;
  });

  describe('nunjucks', () => {
    const hexo = new Hexo(__dirname);
    const loremFn = () => { return 'ipsum'; };
    const content = 'alert "{% lorem %}"';
    const engine = 'coffee';

    before(async () => {
      await hexo.init();
      hexo.extend.tag.register('lorem', loremFn);
      hexo.extend.renderer.register('coffee', 'js', require('../lib/renderer'), true);
    });

    it('default', async () => {
      const result = await hexo.post.render(content, { content, engine });
      result.content.should.eql('(function() {\n  alert("{% lorem %}");\n\n}).call(this);\n');
    });

    it('disable disabelNunjucks', async () => {
      const renderer = hexo.render.renderer.get('coffee', true);
      renderer.disableNunjucks = false;
      hexo.extend.renderer.register('coffee', 'js', renderer, true);

      const result = await hexo.post.render(null, { content, engine });
      result.content.should.eql('(function() {\n  alert("ipsum");\n\n}).call(this);\n');
    });
  });
});
